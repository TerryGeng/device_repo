# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.4
#
# <auto-generated>
#
# Generated from file `Digitizer.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy
from . import device_repo_ice

# Included module device_repo_ice
_M_device_repo_ice = Ice.openModule('device_repo.device_repo_ice')

# Start of module device_repo_ice
__name__ = 'device_repo.device_repo_ice'

_M_device_repo_ice._t_Digitizer = IcePy.defineValue('::device_repo_ice::Digitizer', Ice.Value, -1, (), False, True, None, ())

if 'DigitizerPrx' not in _M_device_repo_ice.__dict__:
    _M_device_repo_ice.DigitizerPrx = Ice.createTempClass()
    class DigitizerPrx(_M_device_repo_ice.DevicePrx):

        def set_sample_number(self, number_of_samples, context=None):
            return _M_device_repo_ice.Digitizer._op_set_sample_number.invoke(self, ((number_of_samples, ), context))

        def set_sample_numberAsync(self, number_of_samples, context=None):
            return _M_device_repo_ice.Digitizer._op_set_sample_number.invokeAsync(self, ((number_of_samples, ), context))

        def begin_set_sample_number(self, number_of_samples, _response=None, _ex=None, _sent=None, context=None):
            return _M_device_repo_ice.Digitizer._op_set_sample_number.begin(self, ((number_of_samples, ), _response, _ex, _sent, context))

        def end_set_sample_number(self, _r):
            return _M_device_repo_ice.Digitizer._op_set_sample_number.end(self, _r)

        def set_input_range(self, channel, range, context=None):
            return _M_device_repo_ice.Digitizer._op_set_input_range.invoke(self, ((channel, range), context))

        def set_input_rangeAsync(self, channel, range, context=None):
            return _M_device_repo_ice.Digitizer._op_set_input_range.invokeAsync(self, ((channel, range), context))

        def begin_set_input_range(self, channel, range, _response=None, _ex=None, _sent=None, context=None):
            return _M_device_repo_ice.Digitizer._op_set_input_range.begin(self, ((channel, range), _response, _ex, _sent, context))

        def end_set_input_range(self, _r):
            return _M_device_repo_ice.Digitizer._op_set_input_range.end(self, _r)

        def set_repeats(self, repeats, context=None):
            return _M_device_repo_ice.Digitizer._op_set_repeats.invoke(self, ((repeats, ), context))

        def set_repeatsAsync(self, repeats, context=None):
            return _M_device_repo_ice.Digitizer._op_set_repeats.invokeAsync(self, ((repeats, ), context))

        def begin_set_repeats(self, repeats, _response=None, _ex=None, _sent=None, context=None):
            return _M_device_repo_ice.Digitizer._op_set_repeats.begin(self, ((repeats, ), _response, _ex, _sent, context))

        def end_set_repeats(self, _r):
            return _M_device_repo_ice.Digitizer._op_set_repeats.end(self, _r)

        def set_trigger_level(self, trigger_level, context=None):
            return _M_device_repo_ice.Digitizer._op_set_trigger_level.invoke(self, ((trigger_level, ), context))

        def set_trigger_levelAsync(self, trigger_level, context=None):
            return _M_device_repo_ice.Digitizer._op_set_trigger_level.invokeAsync(self, ((trigger_level, ), context))

        def begin_set_trigger_level(self, trigger_level, _response=None, _ex=None, _sent=None, context=None):
            return _M_device_repo_ice.Digitizer._op_set_trigger_level.begin(self, ((trigger_level, ), _response, _ex, _sent, context))

        def end_set_trigger_level(self, _r):
            return _M_device_repo_ice.Digitizer._op_set_trigger_level.end(self, _r)

        def set_trigger_delay(self, delay, context=None):
            return _M_device_repo_ice.Digitizer._op_set_trigger_delay.invoke(self, ((delay, ), context))

        def set_trigger_delayAsync(self, delay, context=None):
            return _M_device_repo_ice.Digitizer._op_set_trigger_delay.invokeAsync(self, ((delay, ), context))

        def begin_set_trigger_delay(self, delay, _response=None, _ex=None, _sent=None, context=None):
            return _M_device_repo_ice.Digitizer._op_set_trigger_delay.begin(self, ((delay, ), _response, _ex, _sent, context))

        def end_set_trigger_delay(self, _r):
            return _M_device_repo_ice.Digitizer._op_set_trigger_delay.end(self, _r)

        def set_trigger_timeout(self, timeout, context=None):
            return _M_device_repo_ice.Digitizer._op_set_trigger_timeout.invoke(self, ((timeout, ), context))

        def set_trigger_timeoutAsync(self, timeout, context=None):
            return _M_device_repo_ice.Digitizer._op_set_trigger_timeout.invokeAsync(self, ((timeout, ), context))

        def begin_set_trigger_timeout(self, timeout, _response=None, _ex=None, _sent=None, context=None):
            return _M_device_repo_ice.Digitizer._op_set_trigger_timeout.begin(self, ((timeout, ), _response, _ex, _sent, context))

        def end_set_trigger_timeout(self, _r):
            return _M_device_repo_ice.Digitizer._op_set_trigger_timeout.end(self, _r)

        def get_sample_rate(self, context=None):
            return _M_device_repo_ice.Digitizer._op_get_sample_rate.invoke(self, ((), context))

        def get_sample_rateAsync(self, context=None):
            return _M_device_repo_ice.Digitizer._op_get_sample_rate.invokeAsync(self, ((), context))

        def begin_get_sample_rate(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_device_repo_ice.Digitizer._op_get_sample_rate.begin(self, ((), _response, _ex, _sent, context))

        def end_get_sample_rate(self, _r):
            return _M_device_repo_ice.Digitizer._op_get_sample_rate.end(self, _r)

        def get_sample_number(self, context=None):
            return _M_device_repo_ice.Digitizer._op_get_sample_number.invoke(self, ((), context))

        def get_sample_numberAsync(self, context=None):
            return _M_device_repo_ice.Digitizer._op_get_sample_number.invokeAsync(self, ((), context))

        def begin_get_sample_number(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_device_repo_ice.Digitizer._op_get_sample_number.begin(self, ((), _response, _ex, _sent, context))

        def end_get_sample_number(self, _r):
            return _M_device_repo_ice.Digitizer._op_get_sample_number.end(self, _r)

        def get_input_range(self, channel, context=None):
            return _M_device_repo_ice.Digitizer._op_get_input_range.invoke(self, ((channel, ), context))

        def get_input_rangeAsync(self, channel, context=None):
            return _M_device_repo_ice.Digitizer._op_get_input_range.invokeAsync(self, ((channel, ), context))

        def begin_get_input_range(self, channel, _response=None, _ex=None, _sent=None, context=None):
            return _M_device_repo_ice.Digitizer._op_get_input_range.begin(self, ((channel, ), _response, _ex, _sent, context))

        def end_get_input_range(self, _r):
            return _M_device_repo_ice.Digitizer._op_get_input_range.end(self, _r)

        def get_repeats(self, context=None):
            return _M_device_repo_ice.Digitizer._op_get_repeats.invoke(self, ((), context))

        def get_repeatsAsync(self, context=None):
            return _M_device_repo_ice.Digitizer._op_get_repeats.invokeAsync(self, ((), context))

        def begin_get_repeats(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_device_repo_ice.Digitizer._op_get_repeats.begin(self, ((), _response, _ex, _sent, context))

        def end_get_repeats(self, _r):
            return _M_device_repo_ice.Digitizer._op_get_repeats.end(self, _r)

        def get_trigger_level(self, context=None):
            return _M_device_repo_ice.Digitizer._op_get_trigger_level.invoke(self, ((), context))

        def get_trigger_levelAsync(self, context=None):
            return _M_device_repo_ice.Digitizer._op_get_trigger_level.invokeAsync(self, ((), context))

        def begin_get_trigger_level(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_device_repo_ice.Digitizer._op_get_trigger_level.begin(self, ((), _response, _ex, _sent, context))

        def end_get_trigger_level(self, _r):
            return _M_device_repo_ice.Digitizer._op_get_trigger_level.end(self, _r)

        def get_trigger_delay(self, context=None):
            return _M_device_repo_ice.Digitizer._op_get_trigger_delay.invoke(self, ((), context))

        def get_trigger_delayAsync(self, context=None):
            return _M_device_repo_ice.Digitizer._op_get_trigger_delay.invokeAsync(self, ((), context))

        def begin_get_trigger_delay(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_device_repo_ice.Digitizer._op_get_trigger_delay.begin(self, ((), _response, _ex, _sent, context))

        def end_get_trigger_delay(self, _r):
            return _M_device_repo_ice.Digitizer._op_get_trigger_delay.end(self, _r)

        def get_trigger_timeout(self, context=None):
            return _M_device_repo_ice.Digitizer._op_get_trigger_timeout.invoke(self, ((), context))

        def get_trigger_timeoutAsync(self, context=None):
            return _M_device_repo_ice.Digitizer._op_get_trigger_timeout.invokeAsync(self, ((), context))

        def begin_get_trigger_timeout(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_device_repo_ice.Digitizer._op_get_trigger_timeout.begin(self, ((), _response, _ex, _sent, context))

        def end_get_trigger_timeout(self, _r):
            return _M_device_repo_ice.Digitizer._op_get_trigger_timeout.end(self, _r)

        def acquire(self, context=None):
            return _M_device_repo_ice.Digitizer._op_acquire.invoke(self, ((), context))

        def acquireAsync(self, context=None):
            return _M_device_repo_ice.Digitizer._op_acquire.invokeAsync(self, ((), context))

        def begin_acquire(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_device_repo_ice.Digitizer._op_acquire.begin(self, ((), _response, _ex, _sent, context))

        def end_acquire(self, _r):
            return _M_device_repo_ice.Digitizer._op_acquire.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_device_repo_ice.DigitizerPrx.ice_checkedCast(proxy, '::device_repo_ice::Digitizer', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_device_repo_ice.DigitizerPrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::device_repo_ice::Digitizer'
    _M_device_repo_ice._t_DigitizerPrx = IcePy.defineProxy('::device_repo_ice::Digitizer', DigitizerPrx)

    _M_device_repo_ice.DigitizerPrx = DigitizerPrx
    del DigitizerPrx

    _M_device_repo_ice.Digitizer = Ice.createTempClass()
    class Digitizer(_M_device_repo_ice.Device):

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::device_repo_ice::Device', '::device_repo_ice::Digitizer')

        def ice_id(self, current=None):
            return '::device_repo_ice::Digitizer'

        @staticmethod
        def ice_staticId():
            return '::device_repo_ice::Digitizer'

        def set_sample_number(self, number_of_samples, current=None):
            raise NotImplementedError("servant method 'set_sample_number' not implemented")

        def set_input_range(self, channel, range, current=None):
            raise NotImplementedError("servant method 'set_input_range' not implemented")

        def set_repeats(self, repeats, current=None):
            raise NotImplementedError("servant method 'set_repeats' not implemented")

        def set_trigger_level(self, trigger_level, current=None):
            raise NotImplementedError("servant method 'set_trigger_level' not implemented")

        def set_trigger_delay(self, delay, current=None):
            raise NotImplementedError("servant method 'set_trigger_delay' not implemented")

        def set_trigger_timeout(self, timeout, current=None):
            raise NotImplementedError("servant method 'set_trigger_timeout' not implemented")

        def get_sample_rate(self, current=None):
            raise NotImplementedError("servant method 'get_sample_rate' not implemented")

        def get_sample_number(self, current=None):
            raise NotImplementedError("servant method 'get_sample_number' not implemented")

        def get_input_range(self, channel, current=None):
            raise NotImplementedError("servant method 'get_input_range' not implemented")

        def get_repeats(self, current=None):
            raise NotImplementedError("servant method 'get_repeats' not implemented")

        def get_trigger_level(self, current=None):
            raise NotImplementedError("servant method 'get_trigger_level' not implemented")

        def get_trigger_delay(self, current=None):
            raise NotImplementedError("servant method 'get_trigger_delay' not implemented")

        def get_trigger_timeout(self, current=None):
            raise NotImplementedError("servant method 'get_trigger_timeout' not implemented")

        def acquire(self, current=None):
            raise NotImplementedError("servant method 'acquire' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_device_repo_ice._t_DigitizerDisp)

        __repr__ = __str__

    _M_device_repo_ice._t_DigitizerDisp = IcePy.defineClass('::device_repo_ice::Digitizer', Digitizer, (), None, (_M_device_repo_ice._t_DeviceDisp,))
    Digitizer._ice_type = _M_device_repo_ice._t_DigitizerDisp

    Digitizer._op_set_sample_number = IcePy.Operation('set_sample_number', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_int, False, 0),), (), None, ())
    Digitizer._op_set_input_range = IcePy.Operation('set_input_range', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_int, False, 0), ((), IcePy._t_double, False, 0)), (), None, ())
    Digitizer._op_set_repeats = IcePy.Operation('set_repeats', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_int, False, 0),), (), None, ())
    Digitizer._op_set_trigger_level = IcePy.Operation('set_trigger_level', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_double, False, 0),), (), None, ())
    Digitizer._op_set_trigger_delay = IcePy.Operation('set_trigger_delay', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_double, False, 0),), (), None, ())
    Digitizer._op_set_trigger_timeout = IcePy.Operation('set_trigger_timeout', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_double, False, 0),), (), None, ())
    Digitizer._op_get_sample_rate = IcePy.Operation('get_sample_rate', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), IcePy._t_double, False, 0), ())
    Digitizer._op_get_sample_number = IcePy.Operation('get_sample_number', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), IcePy._t_int, False, 0), ())
    Digitizer._op_get_input_range = IcePy.Operation('get_input_range', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_int, False, 0),), (), ((), IcePy._t_int, False, 0), ())
    Digitizer._op_get_repeats = IcePy.Operation('get_repeats', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), IcePy._t_int, False, 0), ())
    Digitizer._op_get_trigger_level = IcePy.Operation('get_trigger_level', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), IcePy._t_double, False, 0), ())
    Digitizer._op_get_trigger_delay = IcePy.Operation('get_trigger_delay', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), IcePy._t_double, False, 0), ())
    Digitizer._op_get_trigger_timeout = IcePy.Operation('get_trigger_timeout', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), IcePy._t_double, False, 0), ())
    Digitizer._op_acquire = IcePy.Operation('acquire', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), _M_device_repo_ice._t_DoubleDataSet, False, 0), ())

    _M_device_repo_ice.Digitizer = Digitizer
    del Digitizer

# End of module device_repo_ice
